 ===doc - 30 seconds introduction===
 To give bdoc a testrun on your project place the following configuration in your pom.xml:
{{{
  	<build>
		<plugins>
			<plugin>
				<groupId>com.googlecode.bdoc</groupId>
				<artifactId>maven-bdoc-plugin</artifactId>
				<version>0.7.6</version>
			</plugin>
		</plugins>
	</build>
	
	<pluginRepositories>
		<pluginRepository>
			<id>perottobc-release</id>
			<url>http://perottobc-repository.googlecode.com/svn/maven2/releases</url>
		</pluginRepository>
	</pluginRepositories>
}}}
 BDoc is not currently deployd to the central maven repository, so until the 1.0 is released you need a reference to the repo of Mr Per Otto Bergum Christensen. Your could also build the project locally from the source at http://bdoc.googlecode.com/svn/trunk.

 With the above configuration in place run the following command:
{{{
mvn bdoc:doc
}}}
 Your bdoc.html is now generated in the ./target/site/ directory of your project. Check  it out and see what your testcode communicates. 

 ===diff - 30 more seconds===
 BDoc also comes with a diff, so that the developer can see the difference in the bdoc between versions. In order for this to work, bdoc needs to be configured with a _logDirectory_, where it can store snapshot of bdocs. The diff will work on the two latest versions of bdocs, and present the result as an html-report. To enable this feature add the configuration-element shown below:
{{{
	<plugin>
		<groupId>com.googlecode.bdoc</groupId>
		<artifactId>maven-bdoc-plugin</artifactId>
		<version>${maven.bdoc.plugin.version}</version>
		<configuration>
			<logDirectory>bddlog</logDirectory>
		</configuration>
	</plugin>	
}}}
 With the above configuration in place run the following command:
{{{
mvn bdoc:diff
}}}
 The plugin will probably tell you that no diff is found. To see some results do the following:
  * Run _mvn bdoc:doc_ - a bdoc-snaphot will be stored in your _logDirectory_
  * Add, delete og change on or more tests in your project
  * Run _mvn clean bdoc:doc_ - a new bdoc-snaphot will be stored in your _logDirectory_
  * run _mvn bdoc:diff_ again - a diff-report will be generated in your ./target/site/ directory, look it up to see the changes in behaviour.

 ===doc userstories - 2 minute tutorial===
 In order to doc userstories with behaviour they must be defined and referenced by the tests. 

 User stories are defined in a java enum, shown by the example below. There is no interface to implement, but the the id() and narrative() methods are required. The name of the userstory is fetched from the name() method by the enum default implementation.
{{{
public enum Story {

	STACK(1, "As a developer", "I want to push objects to a stack", "so that objects can be poped last in first out");

	private Integer id;
	private String[] narrative;

	Story(Integer id, String ... narrative ) {
		this.id = id;
		this.narrative = narrative;
	}

	public Integer id() {
		return id;
	}

	public String[] narrative() {
		return narrative;
	}
}
}}}

 The tests are referencing the user stories with an annotation, which also needs to be implemented. An example of the annotation is shown below.  
{{{
@Retention(RetentionPolicy.RUNTIME)
@Target( { ElementType.METHOD, ElementType.TYPE })
public @interface Ref {

	Story value();
}
}}}

 It is not necessary to handcode these classes, the following command will do the job for you:
{{{
mvn bdoc:generate
}}}
 The result will describe what files have been generated:
{{{
C:\googlecode\bdoc-base\bdoc-test\bdoc-test-no-config>mvn bdoc:generate
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'bdoc'.
[INFO] ------------------------------------------------------------------------
[INFO] Building bdoc-test-no-config
[INFO]    task-segment: [bdoc:generate]
[INFO] ------------------------------------------------------------------------
[INFO] [bdoc:generate]
[INFO] No package is set with option -DjavaPackage=<package>, will use: com.googlecode.bdoc.test.no.config
[INFO] ------------------------------------------------------------------------
[INFO] Result: SUCCESS
File created: C:\googlecode\bdoc-base\bdoc-test\bdoc-test-no-config\src\test\java\com\googlecode\bdoc\test\no\config\Ref.java
File created: C:\googlecode\bdoc-base\bdoc-test\bdoc-test-no-config\src\test\java\com\googlecode\bdoc\test\no\config\Story.java

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Wed Aug 27 22:45:36 CEST 2008
[INFO] Final Memory: 5M/9M
[INFO] ------------------------------------------------------------------------
}}}


{{{
@Ref(Story.STACK)
public class TestStack {

   .. .
	@Test
	public void givenAnEmptyStackWhenOneValueIsPushedThenTheStackShouldNotBeEmpty() {
		stack.push("1");
		assertFalse(stack.isEmpty());
	}
}}} 


 ===Next===
 More doc will come, in the meanwhile, you could take a look at the example projects found at http://bdoc.googlecode.com/svn/trunk/bdoc-examples. For info about checkout http://code.google.com/p/bdoc/source/checkout