_08 March 2009 - Release 0.8.1_
 Version 0.8.1 is released with changes in the underlying persistence mechanism, the doc and diff report is merged into one, and advanced scenarios has had an upgrade. Persistence was earlier a configuration option, this is no longer an option and bdoc will always save a copy of the the bdoc (under 'user.home'/bdoc). The goal _bdoc:diff_ is removed, now the _bdoc:doc_ will both produce a bdoc report and a bdoc change log report. This change will give the users less configuration and full functionality of bdoc in each run. The goal _bdoc:generate_ has been changed to _bdoc:init_, which better communicates the intent of the goal. Read more about _bdoc:init_ in the [HowTo]. More info about the changes in support for advanced scenarios will be added shortly.

_20 December 2008 - Release 0.7.17_
 Version 0.7.17 is released with functionality for specifying how scenarios are generated in the BDoc report. Read more on HowToChangeFormattingOfScenarios.

_12 December 2008 - Release 0.7.16_
 Version 0.7.16 is released with functionality for specifying advanced scenarios without making an extremely long test method. The solution was proposed by Micael Vesterlund, which now also is a developer on the project. Read more on HowToWriteScenariosWithoutLongMethodNames.

_04 December 2008 - Release 0.7.14_
 Version 0.7.14 is released with functionality for specifying include/exclude configuration for the plugin. This was asked for in Issue3. Read more on [HowToExcludeAndIncludeTestsForBDoc].

_26 November 2008 - Release 0.7.12_
 Version 0.7.12 is released with a bugfix for how class names is generated in the BDoc report, Issue2. Documentation on the subject on HowtoChangeDefaultGeneratedClassNames is also added.

_08 November 2008 - Release 0.7.10_
 Version 0.7.10 is released with support for direct reference to the class under test. This could be usefull if you want to name your test differently, for example YourClassIntegrationTest. 

_18 October 2008 - Release 0.7.9_

 Version 0.7.9 is released with direct [http://testng.org/doc/ TestNG] support, specific test annotation configuration is no longer neccecery. Now every testmethod annontated with _Test_ will be extracted as behaviour. It doesn't matter if the annotation is _org.junit.Test_ or _org.testng.annotations.Test_. BDoc will also extract any testmethod starting with 'test', supporting JUnit3.